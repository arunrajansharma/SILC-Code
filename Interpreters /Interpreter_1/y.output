Terminals unused in grammar

   LT
   GT
   EQ


Grammar

    0 $accept: start $end

    1 start: program

    2 program: stmts

    3 stmts: stmt stmts
    4      | /* empty */

    5 stmt: ID ASSIGN_OP expr END
    6     | READ '(' ID ')' END
    7     | WRITE '(' expr ')' END

    8 expr: expr P expr
    9     | expr M expr
   10     | expr S expr
   11     | expr R expr
   12     | expr D expr
   13     | '(' expr ')'
   14     | M expr
   15     | expr C expr
   16     | NUMBER
   17     | ID


Terminals, with rules where they appear

$end (0) 0
'(' (40) 6 7 13
')' (41) 6 7 13
error (256)
NUMBER (258) 16
END (259) 5 6 7
P (260) 8
M (261) 9 14
S (262) 10
D (263) 12
C (264) 15
R (265) 11
READ (266) 6
WRITE (267) 7
ASSIGN_OP (268) 5
ID (269) 5 6 17
LT (270)
GT (271)
EQ (272)
UMINUS (273)


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
start (22)
    on left: 1, on right: 0
program (23)
    on left: 2, on right: 1
stmts (24)
    on left: 3 4, on right: 2 3
stmt (25)
    on left: 5 6 7, on right: 3
expr (26)
    on left: 8 9 10 11 12 13 14 15 16 17, on right: 5 7 8 9 10 11 12
    13 14 15


state 0

    0 $accept: . start $end

    READ   shift, and go to state 1
    WRITE  shift, and go to state 2
    ID     shift, and go to state 3

    $default  reduce using rule 4 (stmts)

    start    go to state 4
    program  go to state 5
    stmts    go to state 6
    stmt     go to state 7


state 1

    6 stmt: READ . '(' ID ')' END

    '('  shift, and go to state 8


state 2

    7 stmt: WRITE . '(' expr ')' END

    '('  shift, and go to state 9


state 3

    5 stmt: ID . ASSIGN_OP expr END

    ASSIGN_OP  shift, and go to state 10


state 4

    0 $accept: start . $end

    $end  shift, and go to state 11


state 5

    1 start: program .

    $default  reduce using rule 1 (start)


state 6

    2 program: stmts .

    $default  reduce using rule 2 (program)


state 7

    3 stmts: stmt . stmts

    READ   shift, and go to state 1
    WRITE  shift, and go to state 2
    ID     shift, and go to state 3

    $default  reduce using rule 4 (stmts)

    stmts  go to state 12
    stmt   go to state 7


state 8

    6 stmt: READ '(' . ID ')' END

    ID  shift, and go to state 13


state 9

    7 stmt: WRITE '(' . expr ')' END

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 18


state 10

    5 stmt: ID ASSIGN_OP . expr END

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 19


state 11

    0 $accept: start $end .

    $default  accept


state 12

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


state 13

    6 stmt: READ '(' ID . ')' END

    ')'  shift, and go to state 20


state 14

   16 expr: NUMBER .

    $default  reduce using rule 16 (expr)


state 15

   14 expr: M . expr

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 21


state 16

   17 expr: ID .

    $default  reduce using rule 17 (expr)


state 17

   13 expr: '(' . expr ')'

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 22


state 18

    7 stmt: WRITE '(' expr . ')' END
    8 expr: expr . P expr
    9     | expr . M expr
   10     | expr . S expr
   11     | expr . R expr
   12     | expr . D expr
   15     | expr . C expr

    P    shift, and go to state 23
    M    shift, and go to state 24
    S    shift, and go to state 25
    D    shift, and go to state 26
    C    shift, and go to state 27
    R    shift, and go to state 28
    ')'  shift, and go to state 29


state 19

    5 stmt: ID ASSIGN_OP expr . END
    8 expr: expr . P expr
    9     | expr . M expr
   10     | expr . S expr
   11     | expr . R expr
   12     | expr . D expr
   15     | expr . C expr

    END  shift, and go to state 30
    P    shift, and go to state 23
    M    shift, and go to state 24
    S    shift, and go to state 25
    D    shift, and go to state 26
    C    shift, and go to state 27
    R    shift, and go to state 28


state 20

    6 stmt: READ '(' ID ')' . END

    END  shift, and go to state 31


state 21

    8 expr: expr . P expr
    9     | expr . M expr
   10     | expr . S expr
   11     | expr . R expr
   12     | expr . D expr
   14     | M expr .
   15     | expr . C expr

    $default  reduce using rule 14 (expr)


state 22

    8 expr: expr . P expr
    9     | expr . M expr
   10     | expr . S expr
   11     | expr . R expr
   12     | expr . D expr
   13     | '(' expr . ')'
   15     | expr . C expr

    P    shift, and go to state 23
    M    shift, and go to state 24
    S    shift, and go to state 25
    D    shift, and go to state 26
    C    shift, and go to state 27
    R    shift, and go to state 28
    ')'  shift, and go to state 32


state 23

    8 expr: expr P . expr

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 33


state 24

    9 expr: expr M . expr

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 34


state 25

   10 expr: expr S . expr

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 35


state 26

   12 expr: expr D . expr

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 36


state 27

   15 expr: expr C . expr

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 37


state 28

   11 expr: expr R . expr

    NUMBER  shift, and go to state 14
    M       shift, and go to state 15
    ID      shift, and go to state 16
    '('     shift, and go to state 17

    expr  go to state 38


state 29

    7 stmt: WRITE '(' expr ')' . END

    END  shift, and go to state 39


state 30

    5 stmt: ID ASSIGN_OP expr END .

    $default  reduce using rule 5 (stmt)


state 31

    6 stmt: READ '(' ID ')' END .

    $default  reduce using rule 6 (stmt)


state 32

   13 expr: '(' expr ')' .

    $default  reduce using rule 13 (expr)


state 33

    8 expr: expr . P expr
    8     | expr P expr .
    9     | expr . M expr
   10     | expr . S expr
   11     | expr . R expr
   12     | expr . D expr
   15     | expr . C expr

    S  shift, and go to state 25
    D  shift, and go to state 26
    C  shift, and go to state 27
    R  shift, and go to state 28

    $default  reduce using rule 8 (expr)


state 34

    8 expr: expr . P expr
    9     | expr . M expr
    9     | expr M expr .
   10     | expr . S expr
   11     | expr . R expr
   12     | expr . D expr
   15     | expr . C expr

    S  shift, and go to state 25
    D  shift, and go to state 26
    C  shift, and go to state 27
    R  shift, and go to state 28

    $default  reduce using rule 9 (expr)


state 35

    8 expr: expr . P expr
    9     | expr . M expr
   10     | expr . S expr
   10     | expr S expr .
   11     | expr . R expr
   12     | expr . D expr
   15     | expr . C expr

    C  shift, and go to state 27
    R  shift, and go to state 28

    $default  reduce using rule 10 (expr)


state 36

    8 expr: expr . P expr
    9     | expr . M expr
   10     | expr . S expr
   11     | expr . R expr
   12     | expr . D expr
   12     | expr D expr .
   15     | expr . C expr

    C  shift, and go to state 27
    R  shift, and go to state 28

    $default  reduce using rule 12 (expr)


state 37

    8 expr: expr . P expr
    9     | expr . M expr
   10     | expr . S expr
   11     | expr . R expr
   12     | expr . D expr
   15     | expr . C expr
   15     | expr C expr .

    R  shift, and go to state 28

    C  error (nonassociative)

    $default  reduce using rule 15 (expr)


state 38

    8 expr: expr . P expr
    9     | expr . M expr
   10     | expr . S expr
   11     | expr . R expr
   11     | expr R expr .
   12     | expr . D expr
   15     | expr . C expr

    R  error (nonassociative)

    $default  reduce using rule 11 (expr)


state 39

    7 stmt: WRITE '(' expr ')' END .

    $default  reduce using rule 7 (stmt)
