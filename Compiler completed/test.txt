decl
integer array[5];
integer partition(integer p;integer r);
integer quicksort(integer first;integer last);

enddecl

integer partition(integer p;integer r) { 

decl 
integer x,i,j,temp;
enddecl
begin
x = array[r];
i = p-1;
j = p;
while(j <= r-1)
do

 if(array[j] <= x) then 
  i = i+1;
  temp = array[i];
  array[i]=array[j];
  array[j] = temp;
  endif;
 j = j+1;

endwhile;

temp = array[i+1];
array[i+1] = array[r];
array[r] = temp;

return i+1;
end
}
integer quicksort(integer first;integer last) {
decl
integer pivot,result ;
enddecl
begin
if(first<last) then
pivot = partition(first,last);
result = quicksort(first ,(pivot-1));
result = quicksort((pivot+1),last);

endif;
return 1; 
end
}




integer main( ){ 
decl
integer result,i;
enddecl
begin
i = 1;
while(i<=5) do
 read(array[i]);
 i=i+1;
endwhile;

result  = quicksort(1,5);

i = 1;
while(i<=5) do
 write(array[i]);
 i=i+1;
endwhile;


return 1;
end

}
